% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeMemory.R
\name{computeMemory}
\alias{computeMemory}
\title{Organizes time series data into lags.}
\usage{
computeMemory = function(lagged.data,
 drivers = NULL,
 response = "Response",
 add.random = TRUE,
 random.mode = "autocorrelated",
 repetitions = 10,
 subset.response = "none"
)
}
\arguments{
\item{lagged.data}{a lagged dataset resulting from \code{\link{prepareLaggedData}}.}

\item{drivers}{a string or vector of strings with variables to be used as predictors in the model (i.e. c("Suitability", "Driver.A"))}

\item{add.random}{if TRUE, adds a random term to the model, useful to assess the significance of the variable importance scores}

\item{drivers}{character vector, names of the numeric columns to be used as predictors in the model.}

\item{random.mode:}{either "white.noise" or "autocorrelated". See details and \code{\link{addRandomColumn}}.}

\item{repetitions:}{integer, number of random forest models to fit}

\item{response:}{character string, name of the response variable (typically, "Response_0")}

\item{subset.response:}{character string with values "up", "down" or "none", triggers the subsetting of the input dataset. "up" only models memory on cases where the response's trend is positive, "down" selectes cases with negative trends, and "none" selects all cases.}
}
\value{
A dataframe with columns representing time-delayed values of the drivers and the response.
}
\description{
Takes an oputput of \code{\link{prepareLaggedData}} to fit the following model with Random Forest:
 \eqn{p_{t} ~ p_{t-1} +...+ p_{t-n} + d_{t} + d_{t-1} +...+ d_{t-n}}

 where:

\itemize{
 \item \eqn{d} is a driver (several drivers can be added).
 \item \eqn{t} is the time of any given value of the response \emph{p}.
 \item \eqn{t-1} is the lag number 1 (in time units).
 \item \eqn{p_{t-1} +...+ p_{t-n}}  represents the endogenous component of ecological memory.
 \item \eqn{d_{t-1} +...+ d_{t-n}}  represents the exogenous component of ecological memory.
 \item \eqn{d_{t}} represents the concurrent effect of the driver over the response.
}
}
\details{
The function returns a dataframe. Column names have the lag number as a suffix. The response variable is identified by changing its name to "Response".
}
\examples{
#loading data
data(simulation)

#adding lags
sim.lags <- prepareLaggedData(
  input.data = simulation[[1]],
  response = "Pollen",
  drivers = "Driver",
  time = "Time",
  lags = seq(0, 200, by=20),
  time.zoom=NULL,
  scale=FALSE
  )

}
\seealso{
\code{\link{computeMemory}}
}
\author{
Blas M. Benito  <blasbenito@gmail.com>
}
